/* # 채용공고등록 테이블

*/


-- 카테고리 테이블 
DROP TABLE "JA_CATEGORY";

CREATE TABLE "JA_CATEGORY" (
	"CATEGORY_ID"	VARCHAR2(20)		NOT NULL,
	"CATEGORY_NAME"	VARCHAR2(50)		NOT NULL,
	"CATEGORY_DEPT"	VARCHAR2(10)		NULL,
	"CATEGORY_TYPE"	VARCHAR2(50)		NULL,
	"REQ_CATEGORY_ID"	VARCHAR2(20)		NULL
);

COMMENT ON COLUMN "JA_CATEGORY"."CATEGORY_ID" IS 'ID 시퀀스로 순차 증가 (임시)';

COMMENT ON COLUMN "JA_CATEGORY"."CATEGORY_TYPE" IS '해당 ROW의 카테고리 고유번호를 대표하는 데이터';

COMMENT ON COLUMN "JA_CATEGORY"."REQ_CATEGORY_ID" IS '참조하는 상위단계 아이디';

ALTER TABLE "JA_CATEGORY" ADD CONSTRAINT "PK_JA_CATEGORY" PRIMARY KEY (
	"CATEGORY_ID"
);

--유저테이블 생성 쿼리
DROP TABLE "USER_TABLE";

CREATE TABLE "USER_TABLE" (
	"USER_ID"	VARCHAR2(20)		NOT NULL,
	"USER_PW"	VARCHAR2(100)		NOT NULL,
	"USER_PHONE"	VARCHAR2(11)		NOT NULL,
	"USER_BIRTH"	TIMESTAMP		NOT NULL,
	"USER_EMAIL"	VARCHAR2(254)		NOT NULL,
	"USER_ADRESS"	VARCHAR2(100)		NULL,
	"USER_NAME"	VARCHAR2(50)		NULL,
	"USER_BS_TYPE"	VARCHAR2(200)		NULL,
	"USER_BS_LICENSE"	VARCHAR2(200)		NULL,
	"USER_CREATED_AT"	TIMESTAMP		NULL,
	"USER_LAST_LOGIN"	TIMESTAMP		NULL,
	"USER_COUNT"	NUMBER		NULL,
	"USER_ACT"	VARCHAR2(5)	DEFAULT 'true'	NULL,
	"USER_ROLE"	VARCHAR2(10)		NOT NULL,
	"TERMS_ACT"	VARCHAR2(1)		NOT NULL,
	"TERMS_DATE"	TIMESTAMP		NOT NULL,
	"TERMS_PERIOD"	NUMBER	DEFAULT 3	NOT NULL
);

COMMENT ON COLUMN "USER_TABLE"."USER_ACT" IS '활성화 : true, 비활성화 : false';

COMMENT ON COLUMN "USER_TABLE"."USER_ROLE" IS 'ROLE _B, ROLE _P, ROLE _A, ROLE _AM';

COMMENT ON COLUMN "USER_TABLE"."TERMS_ACT" IS '동의 : Y / 비동의: N';

COMMENT ON COLUMN "USER_TABLE"."TERMS_PERIOD" IS '3, 6 , 12, 60 (개월)';

ALTER TABLE "USER_TABLE" ADD CONSTRAINT "PK_USER_TABLE" PRIMARY KEY (
	"USER_ID"
);

--게시판 테이블 생성 쿼리
DROP TABLE "BOARD";

CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"USER_ID"	VARCHAR2(20)		NOT NULL,
	"CATEGORY_ID"	VARCHAR2(20)		NOT NULL,
	"BOARD_TITLE"	VARCHAR2(100)		NOT NULL,
	"BOARD_CONTENT"	CLOB		NULL,
	"BOARD_DATE"	TIMESTAMP		NULL,
	"BOARD_ORIGINAL_FILENAME"	VARCHAR2(100)		NULL,
	"BOARD_RENAME_FILENAME"	VARCHAR2(100)		NULL,
	"BOARD_READ"	NUMBER	DEFAULT 0	NULL,
	"BOARD_LIKE"	NUMBER	DEFAULT 0	NULL,
	"TAG"	VARCHAR(200)		NULL,
	"SALARY_AVG"	VARCHAR(100)		NULL,
	"EMPLOYEE"	VARCHAR(100)		NULL,
	"LATITUDE"	VARCHAR(100)		NULL,
	"LONGITUDE"	VARCHAR(100)		NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_ORIGINAL_FILENAME" IS '파일첨부';

COMMENT ON COLUMN "BOARD"."BOARD_RENAME_FILENAME" IS '파일첨부';

ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

-- 댓글 테이블 생성 쿼리
DROP TABLE "REPLY";

CREATE TABLE "REPLY" (
	"REPLY_ID"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"USER_ID"	VARCHAR2(20)		NOT NULL,
	"REPLY_CONTENT"	VARCHAR2(500)		NOT NULL,
	"REPLY_CREATE_DATE"	TIMESTAMP		NOT NULL,
	"REPLY_LEVEL"	NUMBER		NULL,
	"REPLY_SEQ"	NUMBER		NULL
);

COMMENT ON COLUMN "REPLY"."BOARD_NO" IS '원글 : 자신의 게시글 고유번호, 답글 : 참조 게시글 고유번호';

COMMENT ON COLUMN "REPLY"."REPLY_LEVEL" IS '원글의 답글 : 1, 답글의 답글 : 2';

COMMENT ON COLUMN "REPLY"."REPLY_SEQ" IS '답글의 순번';

ALTER TABLE "REPLY" ADD CONSTRAINT "PK_REPLY" PRIMARY KEY (
	"REPLY_ID"
);



-- 이력서 테이블 생성 쿼리
CREATE TABLE USER_RESUME (
    RESUME_NO NUMBER NOT NULL PRIMARY KEY
    , RESUME_TITLE VARCHAR2(60) NOT NULL
    , RESUME_PHOTO VARCHAR2(200)
    , RESUME_ACT VARCHAR2(1) DEFAULT 'Y' CHECK (RESUME_ACT IN('Y', 'N')) 
    , RESUME_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    , PORTF_FILE VARCHAR2(200)
    , USER_ID VARCHAR2(20) NOT NULL
);


-- 고등학교 학력사항 생성 쿼리
CREATE TABLE R_HSCHOOL(
    H_EDU_NO NUMBER NOT NULL PRIMARY KEY
    , GED VARCHAR2(1) DEFAULT 'N' NOT NULL CHECK (GED IN('Y', 'N'))
    , H_NAME VARCHAR2(60)
    , H_DATE TIMESTAMP
    , H_MAJOR VARCHAR2(10)
);  


-- 대학교 학력사항 생성 쿼리
CREATE TABLE R_UNIVERSITY(
    U_EDU_NO NUMBER NOT NULL PRIMARY KEY
    , U_ACT VARCHAR2(1) CHECK (U_ACT IN('Y', 'N', 'R'))
    , U_CATEGORY VARCHAR2(1) CHECK (U_CATEGORY IN('T', 'F'))
    , U_NAME VARCHAR2(30)
    , U_DATE TIMESTAMP
    , U_MAJOR VARCHAR2(50)
    , U_POINT NUMBER
);

-- 대학원 학력사항 생성 쿼리
CREATE TABLE R_GSCHOOL(
    G_EDU_NO NUMBER NOT NULL PRIMARY KEY
    , G_ACT VARCHAR2(1) CHECK (G_ACT IN('Y', 'N', 'R'))
    , G_NAME VARCHAR2(30)
    , G_CATEGORY CHAR(6)
    , G_DATE TIMESTAMP
    , G_MAJOR VARCHAR2(50)
    , G_POINT NUMBER
);


-- 경력사항 생성 쿼리
CREATE TABLE R_CAREER(
    CAR_NO NUMBER NOT NULL PRIMARY KEY
    , CAR_NAME VARCHAR2(100)
    , CAR_DATE TIMESTAMP
    , CAR_POSITION VARCHAR2(50)
    , CAR_DEPT VARCHAR2(50)
    , CAR_RESP VARCHAR2(200)
    , CAR_SALARY NUMBER
);


-- 자격증 생성 쿼리
CREATE TABLE R_CERTI(
    CERTI_NO NUMBER NOT NULL PRIMARY KEY
    , CERTI_NAME VARCHAR2(100)
    , CERTI_PUB VARCHAR2(100)
    , CERTI_DATE TIMESTAMP
);


-- 자기소개서 생성 쿼리
CREATE TABLE R_CL(
    CL_NO NUMBER NOT NULL PRIMARY KEY
    , CL_FILE VARCHAR2(200)
    , CL_GROWTH CLOB
    , CL_MOTIVE CLOB
    , CL_ADV CLOB
    , CL_ASP CLOB
);

-- 낀 테이블
-- 고등학교 학력정보 테이블 생성 쿼리
CREATE TABLE RESUME_H_INFO(
    RESUME_NO NUMBER
    , H_EDU_NO NUMBER
);


-- 대학교 학력정보 테이블 생성 쿼리
CREATE TABLE RESUME_U_INFO(
    RESUME_NO NUMBER
    , U_EDU_NO NUMBER
);


-- 대학원 학력정보 테이블 생성 쿼리
CREATE TABLE RESUME_G_INFO(
    RESUME_NO NUMBER 
    , G_EDU_NO NUMBER
);


-- 경력사항 정보 테이블 생성 쿼리
CREATE TABLE RESUME_CAR_INFO(
    RESUME_NO NUMBER
    , CAR_NO NUMBER
);


-- 자격증 정보 테이블 생성 쿼리
CREATE TABLE RESUME_CERTI_INFO(
    RESUME_NO NUMBER
    , CERTI_NO NUMBER
);


-- 자기소개서 정보 테이블 생성 쿼리
CREATE TABLE RESUME_CL_INFO(
    RESUME_NO NUMBER
    , CL_NO NUMBER
);




--시퀀스 생성 완료 

--BUSINESS_RECRUIT_ANNOUNCEMENT_SEQ 생성
DROP SEQUENCE BUSINESS_RA_SEQ;

CREATE SEQUENCE BUSINESS_RA_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;
       
--BUSINESS_APPLICANT_SEQ 시퀀스 생성
DROP SEQUENCE BUSINESS_APPLICANT_SEQ;
       
CREATE SEQUENCE BUSINESS_APPLICANT_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;
       
--BUSINESS_APPLICANT_INTERVIEW_SEQ 시퀀스 생성
DROP SEQUENCE BUSINESS_AI_SEQ;
       
CREATE SEQUENCE BUSINESS_AI_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;
       
       
--BUSINESS_APPLICANT_PASS_SEQ 시퀀스 생성
DROP SEQUENCE BUSINESS_AP_SEQ;
       
CREATE SEQUENCE BUSINESS_AP_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;
       
--USER_RESUME 시퀀스 생성
DROP SEQUENCE USER_RESUME_SEQ;
       
CREATE SEQUENCE USER_RESUME_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;
       
       
--R_HSCHOOL 시퀀스 생성
DROP SEQUENCE R_HSCHOOL_SEQ;
       
CREATE SEQUENCE R_HSCHOOL_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       NOCYCLE
       NOCACHE
       ORDER;