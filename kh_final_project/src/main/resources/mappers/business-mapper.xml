<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="business">

<!-- 회원정보 불러오기 -->
    <select id="viewAccount" resultType="budto">
        SELECT *
        FROM USER_TABLE
        WHERE USER_ID = #{userId}
    </select>
    
<!-- myinfo -->

	<!-- 회사소개 작성 -->
	<insert id="insertBsInfo">
		insert into
	</insert>
	<!-- 뉴스레터 불러오기 -->
	<select id="selectNews" resultType="bidto"> 
		select 
	</select>
	<!--  -->




	<!-- USER_TABLE에서 id가 일치하는 게시물 꺼내옴  -->
	<select id="selectOne1" parameterType="string" resultType="budto">
  	select * from USER_TABLE where USER_ID=#{userId}
	</select>

	<!-- todo/ 04.05 -->	
	<!-- BOARD에서 Qna (코드번호 UDB04)인 게시물 꺼내옴  -->
	<select id="selectQna" resultType="bidto">
	select * from BOARD where CATEGORY_ID='UDB04'
	</select>
	
	<!-- BOARD에서 뉴스레터 (코드번호 UDB05) 인 게시물 꺼내옴  -->
	<select id="selectNews" resultType="bidto">
	select * from BOARD where CATEGORY_ID='UDB05'
	</select>
	
	<!-- BOARD에서 회사소개 (코드번호 UDB06) 인 게시물 꺼내옴  -->
	<select id="selectInfo" resultType="bidto">
	select * from BOARD where CATEGORY_ID='UDB06'
	</select>
	<!-- 회사소개작성 -->
	
	<insert id="insertInfo">
	INSERT INTO BOARD(USER_ID,BOARD_CONTENT,BOARD_DATE,BOARD_ORIGINAL_FILENAME,
					  BOARD_RENAME_FILENAME,TAG,SALARY_AVG,EMPLOYEE) 
 			   VALUES(#{userId},#{boardContent},#{boardDate},#{boardOriginalFilename},
 			          #{boardRenameFilename},#{tag},#{salaryAvg},#{employee})
	</insert>



<!-- account -->
	<insert id="insertAccount">
        INSERT INTO USER_TABLE (USER_PIC, USER_EMAIL, BS_LICENSE, BS_MAIN_PHONE, ADDRESS_POSTCODE, ADDRESS_ROAD, ADDRESS_JIBUN, ADDRESS_DETAIL)
        				VALUES (#{userPic}, #{userEmail}, #{bsLicense}, #{bsMainPhone}, #{addressPostcode}, #{addressRoad}, #{addressJibun}, #{addressDetail})
    </insert>
    
	<!-- 회원정보 수정하기 -->
    <update id="updateAccount">
        UPDATE USER_TABLE SET
        BS_LICENSE = #{bsLicense},
        BS_MAIN_PHONE = #{bsMainPhone},
        ADDRESS_POSTCODE = #{addressPostcode},
        ADDRESS_ROAD = #{addressRoad},
        ADDRESS_JIBUN = #{addressJibun},
        ADDRESS_DETAIL = #{addressDetail}
        WHERE USER_ID = #{userId}
    </update>
    
    <!-- //todo비밀번호 수정하기-->
    <update id="updatePassword">
        UPDATE USER_TABLE SET
        USER_PW = #{userPw}
        WHERE USER_ID = #{userId}
    </update>    
    
    <!-- //todo 회원 프로필 이미지 수정하기 -->
    <update id="updateUimage" >
        UPDATE tb_user SET
        USER_PIC = #{userPic}
        WHERE user_id = #{userId}
    </update>
	
    <!-- //todo회원비밀번호  불러오기-->
    <select id="getUserPw" resultType="budto">
        SELECT USER_ID, USER_PW
        FROM USER_TABLE
        WHERE USER_ID = #{userId}
    </select>
    
    
    
 <!-- 워크넷API data insert -->
   	<insert id="apiInsert" parameterType="brdto">
			insert INTO RECRUIT_REGIST
			(RA_NUM, RECRUIT_TYPE, COMPANY_NAME, BUSINO, USER_EDUCATION
					, SALARY, MIN_SALARY, MAX_SALARY
					, REGIST_DATE, CLOSE_DATE, RA_TITLE
					, CAREER, HOLIDAY_TYPE, EMP_TYPE_CODE) 
			VALUES(RECRUIT_REGIST_SEQ.NEXTVAL, #{recruitType}, #{companyName}, #{busino}, #{userEducation}
					, #{salary}, #{minSalary}, #{maxSalary}
 			        , #{registDate}, #{closeDate}, #{raTitle}
 			        , #{career}, #{holidayType}, #{empTypeCode})
	</insert>
	
	<!-- 직업 카테고리 항목 가져오기 -->
	<select id="getCateList" parameterType="string" resultType="kh.com.job.admin.model.dto.AdCategoryDto">
		SELECT * FROM JA_CATEGORY where CATEGORY_TYPE = #{categoryType} AND CATEGORY_DEPT ='2'
	</select>
	
	<insert id="insertRecruit">
		insert INTO RECRUIT_REGIST
			(RA_NUM, COMPANY_NAME, RECRUIT_TYPE,USER_EDUCATION, USER_ID
					, SALARY, MIN_SALARY, MAX_SALARY
					, REGIST_DATE, CLOSE_DATE
					, CAREER, HOLIDAY_TYPE, EMP_TYPE_CODE
					, RA_TITLE, RA_CONTENT
					, RA_EXTRA_DOCUMENT, RA_ADMISSION) 
			VALUES(RECRUIT_REGIST_SEQ.NEXTVAL, #{companyName}, #{recruitType}, #{userEducation}, #{userId}
					, #{salary}, #{minSalary}, #{maxSalary}
 			        , #{registDate}, #{closeDate}
 			        , #{career}, #{holidayType}, #{empTypeCode}
 			        , #{raTitle}, #{raContent}
 			        , #{raExtraDocument}, 'N')
	</insert>
	
</mapper>