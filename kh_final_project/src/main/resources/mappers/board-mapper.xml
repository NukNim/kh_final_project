<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="boards">

	<select id="listAll" resultType="kh.com.job.board.model.dto.BoardDto">
		SELECT *
		FROM BOARD
		WHERE USER_ID =#{userId}
	</select>
	
	<select id="getboardNo">
		SELECT BOARD_NO FROM BOARD
	</select>
	<!--  게시글 삭제 -->
	<delete id="delete">
		DELETE FROM BOARD WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 게시글 상세 -->
	<select id="viewDetail">
		SELECT BD.BOARD_NO,BD.CATEGORY_ID,BD.BOARD_TITLE,BD.BOARD_CONTENT,BD.BOARD_DATE,BD.UPDATE_DATE,
			   BD.BOARD_ORIGINAL_FILENAME,BD.BOARD_RENAME_FILENAME,BD.BOARD_READ,BD.BOARD_LIKE,
			   BD.TAG,BD.SALARY_AVG,BD.EMPLOYEE,BD.LINK,
			   UT.USER_ID,UT.USER_NAME,UT.USER_PHONE,UT.USER_EMAIL,UT.USER_PIC,UT.BS_TYPE,UT.BS_LICENSE,
			   UT.BS_MAIN_PHONE,UT.USER_ROLE,UT.ADDRESS_ROAD,UT.ADDRESS_JIBUN,UT.ADDRESS_DETAIL,UT.ADDRESS_POSTCODE
		FROM USER_TABLE UT
		JOIN BOARD BD ON UT.USER_ID = BD.USER_ID
		WHERE BD.BOARD_NO = #{boardNo}
	</select>
    
	<!-- 게시글 조회 순으로 조회 -->

	
    
    <!-- 커뮤니티 게시판 카테고리 -->
    <select id="getBoardCate" resultType="kh.com.job.admin.model.dto.AdCategoryDto" >
	SELECT *
	FROM JA_CATEGORY
	WHERE CATEGORY_TYPE = 'UBD'
	AND CATEGORY_DEPT = '2'
	AND CATEGORY_ID NOT IN ('UBD05', 'UBD06')
	</select>
	
	<!--  카테고리 이름 -->
	<select id="getCateName" resultType="String">
	SELECT CATEGORY_NAME FROM JA_CATEGORY WHERE CATEGORY_ID = #{categoryId}
	</select>
    
    <!--  게시글  등록-->
    <insert id="insertPost">
    	INSERT INTO
		BOARD(BOARD_NO,USER_ID,CATEGORY_ID,BOARD_TITLE,BOARD_CONTENT,BOARD_DATE,UPDATE_DATE)
		VALUES(${boardNo},#{userId},#{categoryId},#{boardTitle},#{boardContent},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
		<selectKey keyProperty="boardNo" resultType="_int"
			order="BEFORE">
			SELECT MAX(BOARD_NO) +1 FROM BOARD
		</selectKey>
    </insert>
    
    <!--  게시글 수정 -->
    <update id="updatePost">
    UPDATE BOARD
	SET BOARD_TITLE  = #{boardTitle},
    BOARD_CONTENT = #{boardContent},
    UPDATE_DATE = SYSDATE 
	WHERE BOARD_NO = ${boardNo} AND USER_ID = #{userId}
    </update>
    
    <!-- 게시글 상세조회  -->
   	<select id="detailBoard" resultType="bdto">
   	SELECT * FROM BOARD 
	WHERE BOARD_NO = #{boardNo}
   	</select>
   	
	
 	<!-- 카테고리별 게시글 목록 -->
	<select id="postListByCate" resultType="bdto">
	SELECT * FROM BOARD 
	WHERE CATEGORY_ID = #{categoryId} ORDER BY UPDATE_DATE DESC
	</select>  
	 
	<!--  페이징 게시글 목록 -->
	<select id="postList" resultType="bdto">
		<choose>
			<when test="categoryId == null">
				SELECT  *
				FROM(
					SELECT ROWNUM AS NUM , A.*
					FROM (SELECT * FROM BOARD 
						  WHERE CATEGORY_ID NOT IN ('UBD05', 'UBD06') 
						  ORDER BY UPDATE_DATE DESC) A
				)
				WHERE NUM BETWEEN #{startNum} AND #{endNum}
			</when>
			<otherwise>
				SELECT  *
				FROM(
					SELECT ROWNUM AS NUM , A.*
					FROM ( SELECT * FROM BOARD 
						  WHERE CATEGORY_ID = #{categoryId} 
						  ORDER BY UPDATE_DATE DESC) A
				)
				WHERE NUM BETWEEN #{startNum} AND #{endNum}
			</otherwise>
		</choose>
	</select>
	
	
	
	<!-- 게시글 조회 수 증가 -->
	<update id="updateRead">
	UPDATE BOARD 
	SET BOARD_READ = BOARD_READ + 1 
	WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 좋아요 증가 -->
	<update id="updateLike">
	UPDATE BOARD 
	SET BOARD_LIKE = BOARD_LIKE  + 1 
	WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply">
	INSERT INTO REPLY (REPLY_ID, BOARD_NO, USER_ID, REPLY_CONTENT, REPLY_CREATE_DATE, REPLY_LEVEL, REPLY_SEQ)
	VALUES (${replySeq}, #{boardNo}, #{userId}, #{replyContent}, SYSDATE, 1, 0)
	<selectKey keyProperty="replySeq" resultType="_int" order="BEFORE">
			SELECT MAX(REPLY_ID) +1 FROM REPLY
	</selectKey>
	</insert>
	
	<!-- 댓글 조회 -->
	<select id="replyList" resultType="redto">
	SELECT * FROM REPLY 
	WHERE BOARD_NO = #{boardNo}
	AND REPLY_LEVEL IN ('0','1')
	ORDER BY REPLY_CREATE_DATE ASC
	</select>
	
	<!-- 댓글 삭제  -->
	<update id="deleteReply">
	UPDATE REPLY
	SET REPLY_CONTENT = '삭제된 댓글입니다.',
    REPLY_CREATE_DATE = SYSDATE,
    REPLY_LEVEL = '0'
	WHERE REPLY_ID = #{replyId} AND USER_ID =  #{userId}
	</update>
	
	<!--  댓글 수정 -->
	<update id="updateReply">
	UPDATE REPLY
	SET REPLY_CONTENT =  #{replyContent},
    REPLY_CREATE_DATE = SYSDATE
	WHERE REPLY_ID = #{replyId} AND USER_ID =  #{userId}
	</update>
	
	<!--  인기글 top 5 -->
	<select id="topReadPost" resultType="bdto">
	SELECT * 
	FROM (
  	SELECT *
  	FROM BOARD
  	WHERE CATEGORY_ID NOT IN ('UBD05', 'UBD06')
  	ORDER BY BOARD_READ DESC
	)
	WHERE ROWNUM &lt;= 5
	</select>
	
	<!-- 전체 게시글 수 -->
	<!-- <select id="countByPs" resultType="_int">
	SELECT COUNT(*) AS count
	FROM BOARD
	WHERE CATEGORY_ID NOT IN ('UBD05', 'UBD06')
	</select> -->
	
	<!-- 카테고리 별 게시글 수  -->
	<select id="countByCate" resultType="_int">
	SELECT COUNT(*) AS count
	FROM BOARD 
	WHERE CATEGORY_ID = #{categoryId}
	GROUP BY CATEGORY_ID
	</select> 
	
	<select id="countByPs" resultType="_int">
		SELECT COUNT(*) AS count
	    FROM BOARD
	    <choose>
	        <when test="categoryId == null">
	            WHERE CATEGORY_ID NOT IN ('UBD05', 'UBD06')
	        </when>
	        <otherwise>
	            WHERE CATEGORY_ID = #{categoryId}
	        </otherwise>
	    </choose>
	    <if test="categoryId != null">
	        GROUP BY CATEGORY_ID
	    </if>
	</select>
	
	<!-- 회사소개 -->
	<insert id="insertCompanyInfo">
		INSERT INTO
		BOARD(BOARD_NO,USER_ID,CATEGORY_ID,BOARD_TITLE,BOARD_CONTENT,BOARD_DATE,UPDATE_DATE,TAG,SALARY_AVG,EMPLOYEE)
		VALUES(${boardNo},#{userId},'UBD06',#{boardTitle},#{boardContent},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{tag},#{salaryAvg},#{employee})
		<selectKey keyProperty="boardNo" resultType="_int"
			order="BEFORE">
			SELECT MAX(BOARD_NO) +1 FROM BOARD
		</selectKey>
	</insert>

	<update id="updateCompanyInfo">
		UPDATE USER_TABLE SET
			BOARD_NO = ${boardNo},
			BOARD_CONTENT = #{boardContent},
			UPDATE_DATE = CURRENT_TIMESTAMP,
			TAG = #{tag},
			SALARY_AVG = #{salaryAvg},
			EMPLOYEE = #{employee}
		WHERE USER_ID = #{userId}
		<selectKey keyProperty="boardNo" resultType="_int"
			order="BEFORE">
			SELECT MAX(BOARD_NO) +1 FROM BOARD
		</selectKey>
	</update>
	
	<select id="countInfo" resultType="_int">
		SELECT COUNT(BOARD_NO)
		FROM BOARD
		WHERE CATEGORY_ID = 'UBD06'
		ORDER BY BOARD_NO DESC
	</select>
	
     <select id="companyInfoList" resultType="kh.com.job.board.model.dto.CompanyDto">
    	SELECT BOARD_NO, USER_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_READ, BOARD_LIKE, TAG, SALARY_AVG,
    		   EMPLOYEE, BS_MAIN_PHONE, USER_NAME, ADDRESS_ROAD, ADDRESS_JIBUN, ADDRESS_DETAIL, ADDRESS_POSTCODE
    	  FROM (
    	  		SELECT ROWNUM AS NUM , A.*
    	  		  FROM ( SELECT BD.BOARD_NO, BD.BOARD_TITLE, BD.BOARD_CONTENT, BD.CATEGORY_ID, BD.BOARD_READ,
								BD.BOARD_LIKE, BD.TAG, BD.SALARY_AVG, BD.EMPLOYEE, UT.BS_MAIN_PHONE,
								UT.USER_ID, UT.USER_NAME, UT.ADDRESS_ROAD, UT.ADDRESS_JIBUN, UT.ADDRESS_DETAIL, UT.ADDRESS_POSTCODE
						   FROM BOARD BD
						   JOIN USER_TABLE UT ON BD.USER_ID = UT.USER_ID
						  WHERE BD.CATEGORY_ID = 'UBD06'
    	  		       ) A
    	  		)	   
    	  WHERE NUM BETWEEN #{startNum} AND #{endNum}
    </select>
    
    <select id="companyInfoOne" resultType="kh.com.job.board.model.dto.CompanyDto">
		SELECT BD.BOARD_NO, BD.BOARD_TITLE, BD.BOARD_CONTENT, BD.CATEGORY_ID, BD.BOARD_READ,
		BD.BOARD_LIKE, BD.TAG, BD.SALARY_AVG, BD.EMPLOYEE, UT.BS_MAIN_PHONE,
		UT.USER_ID, UT.USER_NAME, UT.ADDRESS_ROAD, UT.ADDRESS_JIBUN, UT.ADDRESS_DETAIL, UT.ADDRESS_POSTCODE
		FROM BOARD BD
		JOIN USER_TABLE UT ON BD.USER_ID = UT.USER_ID
		WHERE BD.CATEGORY_ID = 'UBD06' AND BD.BOARD_NO = #{boardNo}
    </select>
    
	<!-- 뉴스레터 -->
	<insert id="insertNewsletter">
		INSERT INTO
		BOARD(BOARD_NO,USER_ID,CATEGORY_ID,BOARD_TITLE,BOARD_CONTENT,BOARD_DATE,LINK)
		VALUES(${boardNo},#{userId},'UBD05',#{boardTitle},#{boardContent},CURRENT_TIMESTAMP,#{link})
		<selectKey keyProperty="boardNo" resultType="_int"
			order="BEFORE">
			SELECT MAX(BOARD_NO) +1 FROM BOARD
		</selectKey>
	</insert>

	<update id="updateNewsLetter">
		UPDATE BOARD 
		   SET UPDATE_DATE = CURRENT_TIMESTAMP,
			   BOARD_CONTENT = #{boardContent},
			   BOARD_TITLE = #{boardTitle},
			   LINK = #{link}
		 WHERE BOARD_NO = #{boardNo}
		   AND USER_ID = #{userId}	
	</update>
	
	<select id="newsLetterOne" resultType="bdto" >
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, UPDATE_DATE, BOARD_READ, BOARD_LIKE, TAG, USER_NAME
		FROM BOARD BD
		JOIN USER_TABLE UT ON BD.USER_ID = UT.USER_ID
		WHERE BOARD_NO = #{boardNo} AND CATEGORY_ID = 'UBD05'
	</select>
	
	<select id="countNewsletter" resultType="_int">
		SELECT COUNT(BOARD_NO)
		FROM BOARD
		WHERE CATEGORY_ID = 'UBD05'
		ORDER BY BOARD_NO DESC
	</select>

	<select id="newsLetterAll" resultType="bdto">
		SELECT BOARD_NO, USER_ID, BOARD_TITLE, BOARD_CONTENT, UPDATE_DATE, BOARD_READ, BOARD_LIKE, LINK
		  FROM ( 
		  	    SELECT ROWNUM AS NUM , A.*
			      FROM (
			      		SELECT BOARD_NO, USER_ID, BOARD_TITLE, BOARD_CONTENT, UPDATE_DATE, BOARD_READ, BOARD_LIKE, LINK
						FROM BOARD
						WHERE CATEGORY_ID = 'UBD05'
						ORDER BY BOARD_NO DESC
			           ) A
		  	    )
		  WHERE NUM BETWEEN #{startNum} AND #{endNum}
	</select>

	<select id="newsLetterList" resultType="bdto">
		SELECT BOARD_NO, USER_ID, BOARD_TITLE, BOARD_CONTENT, UPDATE_DATE, BOARD_READ, BOARD_LIKE, LINK
		  FROM ( 
		  	    SELECT ROWNUM AS NUM , A.*
			      FROM (
			      		SELECT BOARD_NO, USER_ID, BOARD_TITLE, BOARD_CONTENT, UPDATE_DATE, BOARD_READ, BOARD_LIKE, LINK
						FROM BOARD
						WHERE USER_ID= #{userId} AND CATEGORY_ID = 'UBD05'
						ORDER BY BOARD_NO DESC
			           ) A
		  	    )
		  WHERE NUM BETWEEN #{startNum} AND #{endNum}
	</select>
	  
	<!-- qna -->
	<insert id="insertQnA">
		INSERT INTO
		BOARD(BOARD_NO,USER_ID,CATEGORY_ID,BOARD_TITLE,BOARD_CONTENT,BOARD_DATE,LINK)
		VALUES(${boardNo},#{userId},'UBD04',#{boardTitle},#{boardContent},CURRENT_TIMESTAMP,#{link})
		<selectKey keyProperty="boardNo" resultType="String"
			order="BEFORE">
			SELECT MAX(BOARD_NO) +1 FROM BOARD
		</selectKey>
	</insert>








</mapper>