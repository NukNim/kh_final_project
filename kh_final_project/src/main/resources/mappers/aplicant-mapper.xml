<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="applicant">
	
	<select id="recruitTitle" resultType="kh.com.job.business.model.dto.BsRecruitDto">
		SELECT RA_NUM, RA_TITLE FROM RECRUIT_REGIST
		WHERE USER_ID = #{userId}
	</select>

	
	<select id="aplicantAll" resultType="_int">
		select count(*) 
		from BUSINESS_APPLICANT ba 
		join RECRUIT_REGIST rr on ba.ra_num = rr.ra_num
		where rr.user_id = #{userId}
	</select>
	
	<select id="aplicantList" resultType="kh.com.job.business.model.dto.BsAplicantDto">
	select  ba.ba_num, ba.user_id, ba.resume_no
        , ur.resume_title, ur.resume_act,  ua.apply_date
        , ba.result_type
	from BUSINESS_APPLICANT ba 
	join user_resume ur ON ba.RESUME_NO = ur.RESUME_NO
	join user_apply ua ON ba.ba_num = ua.ba_num
	where ba.ra_num = #{raNum}
	</select>
	
	<select id="recruitList" resultType="kh.com.job.business.model.dto.BsAplicantRecruitDto">
	select rr.ra_num
		, rr.ra_title
		, (select count(*) from BUSINESS_APPLICANT ba where ba.ra_num = rr.ra_num and result_type = 'N') as failconut
		, (select count(*) from BUSINESS_APPLICANT ba where ba.ra_num = rr.ra_num and result_type = 'Y') as passconut
		, (select count(*) from BUSINESS_APPLICANT ba where ba.ra_num = rr.ra_num ) as aplicount
	from recruit_regist rr
	where rr.user_id = #{userId}
	</select> 
	
	<!-- 캘린더 -->	
	<select id="viewInterview" resultType="indto">
		SELECT CA_NUM,CA_TITLE,DATE_START,DATE_END,LOCATION,INTERVIEWER,MEMO,USER_ID
		FROM INTERVIEW
		WHERE USER_ID = #{userId}
	</select>

	<insert id="insertInterview" parameterType="indto">
	INSERT INTO
	INTERVIEW (CA_NUM,CA_TITLE,DATE_START,DATE_END,LOCATION,INTERVIEWER,MEMO,USER_ID)
	VALUES (#{caNum},#{caTitle},#{dateStart},#{dateEnd},#{location},#{interviewer},#{memo},#{userId})
		<selectKey keyProperty="caNum" resultType="_int"
			order="BEFORE">
			SELECT MAX(CA_NUM) +1 FROM INTERVIEW
		</selectKey>
	</insert>

	<!-- 페이지 리스트 카운트 -->
	<select id="pageListCount" resultType="_int">
		select count(*) from business_applicant ba
		join recruit_regist rr on ba.ra_num = rr.ra_num
		join user_apply ua ON ba.ba_num = ua.ba_num
		<trim prefix="where" prefixOverrides="AND|OR">
			<if test="searchNum != null and searchNum neq ''">
				ba.RA_NUM like '%'||#{searchNum}||'%'
			</if>
			<if test="searchResult != null and searchResult neq ''">
				AND ba.result_type like '%'||#{searchResult}||'%'
			</if>
		</trim>
	</select>
	
	<select id="pageList" resultType="kh.com.job.business.model.dto.BsAplicantListDto">
		select ba_num, user_id, resume_no, RESULT_TYPE
			    , ra_num, ra_title, apply_date
		FROM(
			SELECT ROWNUM AS NUM , A.*
			FROM (
					select ba.ba_num, ba.user_id, ba.resume_no, ba.RESULT_TYPE
					    , rr.ra_num, rr.ra_title, ua.apply_date
					from business_applicant ba
					join recruit_regist rr on ba.ra_num = rr.ra_num
					join user_apply ua ON ba.ba_num = ua.ba_num
			<trim prefix="where" prefixOverrides="AND|OR">
				<if test="searchNum != null and searchNum neq ''">
					ba.RA_NUM like '%'||#{searchNum}||'%'
				</if>
				<if test="searchResult != null and searchResult neq ''">
					AND ba.result_type like '%'||#{searchResult}||'%'
				</if>
			</trim>
				ORDER BY ua.apply_date DESC
			) A
			)
		WHERE NUM BETWEEN #{startNum} AND #{endNum}
	</select>
	
	<select id="applicantResume" resultType="kh.com.job.business.model.dto.BsApplicantResumeDto">
		SELECT ur.RESUME_NO, ur.RESUME_TITLE, ur.RESUME_PHOTO, ur.RESUME_DATE, ur.PORTF_FILE
			, ut.USER_NAME, ut.USER_PHONE, ut.USER_BIRTH, ut.USER_EMAIL,UR.USER_ID 
		FROM USER_RESUME ur 
		JOIN USER_TABLE ut ON UR.USER_ID = UT.USER_ID
		WHERE ur.RESUME_NO = #{resnumeNo}
	</select>
	
	<!-- 이력서 상세보기 - 고등학교 정보 -->
	<select id="highSelectList" resultType="hdto">
		SELECT DISTINCT
		rh.HIGH_EDU_NO, rh.GED, rh.HIGH_NAME, rh.HIGH_DATE, rh.HIGH_MAJOR
		FROM RESUME_HIGHSCHOOL rh
		INNER JOIN 
		RESUME_HIGH_INFO rhi ON rh.HIGH_EDU_NO = rhi.HIGH_EDU_NO
		INNER JOIN 
		USER_RESUME ur ON rhi.RESUME_NO = ur.RESUME_NO
		WHERE
		ur.RESUME_NO =#{resumeNo}
	</select>
	
	<!-- 이력서 상세보기 - 대학교 정보 -->
	<select id="uniSelectList" resultType="udto">
		SELECT DISTINCT
		ru.UNI_EDU_NO, ru.UNI_ACT, ru.UNI_CATEGORY, ru.UNI_NAME, ru.UNI_DATE, ru.UNI_MAJOR, ru.UNI_POINT 
		FROM RESUME_UNIVERSITY ru
		INNER JOIN 
		RESUME_UNI_INFO rui ON ru.UNI_EDU_NO = rui.UNI_EDU_NO
		INNER JOIN 
		USER_RESUME ur ON rui.RESUME_NO = ur.RESUME_NO
		WHERE 
		ur.RESUME_NO =#{resumeNo}
	</select>
	
	<!-- 이력서 상세보기 - 대학원 정보 -->
	<select id="gradSelectList" resultType="gdto">
		SELECT DISTINCT
		rg.GRAD_EDU_NO, rg.GRAD_ACT, rg.GRAD_NAME, rg.GRAD_CATEGORY, rg.GRAD_DATE, rg.GRAD_MAJOR, rg.GRAD_POINT 
		FROM RESUME_GRADSCHOOL rg
		INNER JOIN 
		RESUME_GRAD_INFO rgi ON rg.GRAD_EDU_NO = rgi.GRAD_EDU_NO
		INNER JOIN 
		USER_RESUME ur ON rgi.RESUME_NO = ur.RESUME_NO
		WHERE 
		ur.RESUME_NO =#{resumeNo}
	</select>
	
	<!-- 이력서 상세보기 - 경력사항 정보 -->
	<select id="carSelectList" resultType="careerdto">
		SELECT DISTINCT
		rc.CAR_NO, rc.CAR_NAME, rc.CAR_DATE, rc.CAR_POSITION, rc.CAR_DEPT, rc.CAR_DEPT, rc.CAR_RESP, rc.CAR_SALARY 
		FROM RESUME_CAREER rc
		INNER JOIN 
		RESUME_CAR_INFO rci ON rc.CAR_NO = rci.CAR_NO
		INNER JOIN 
		USER_RESUME ur ON rci.RESUME_NO = ur.RESUME_NO
		WHERE 
		ur.RESUME_NO =#{resumeNo}
	</select>
	
	<!-- 이력서 상세보기 - 자격증 정보 -->
	<select id="certiSelectList" resultType="certidto">
		SELECT DISTINCT
		rc.CERTI_NO, rc.CERTI_NAME, rc.CERTI_PUB, rc.CERTI_DATE 
		FROM RESUME_CERTI rc
		INNER JOIN 
		RESUME_CERTI_INFO rci ON rc.CERTI_NO = rci.CERTI_NO
		INNER JOIN 
		USER_RESUME ur ON rci.RESUME_NO = ur.RESUME_NO
		WHERE 
		ur.RESUME_NO =#{resumeNo}
	</select>
	
	<select id="clSelectOne" resultType="cldto">
		SELECT
		rc.CL_NO, rc.CL_FILE, rc.CL_GROWTH, rc.CL_MOTIVE, rc.CL_ADV, rc.CL_ASP 
		FROM RESUME_CL rc
		INNER JOIN RESUME_CL_INFO rci ON rc.CL_NO = rci.CL_NO
		INNER JOIN USER_RESUME ur ON rci.RESUME_NO = ur.RESUME_NO
		WHERE ur.RESUME_NO =#{resumeNo}
	</select> 
	
	<select id="userInfo" resultType="kh.com.job.business.model.dto.BsAppInfoDto">
		SELECT *
		FROM USER_TABLE
		WHERE USER_ID = #{userId}
	</select>
	
	<insert id="resultInsert">
		INSERT INTO business_applicant_pass
            (ap_num,
             user_id,
             user_name,
             pass_type,
             result_title,
             result_content,
             ba_num)
		VALUES     
			(business_ap_seq.nextval,
            #{userId},
            #{userName},
            #{passType},
            #{resultTitle},
            #{resultContent},
            #{baNum})
             
	</insert>
	
	<update id="updateResultType">
		UPDATE BUSINESS_APPLICANT
		<set>
			<choose>
				<when test="passType == 'PT05'">
				RESULT_TYPE = 'N'
				</when>
				<when test="passType eq null or passType eq''">
				RESULT_TYPE = 'A'
				</when>
				<otherwise>
				RESULT_TYPE = 'Y'
				</otherwise>
			</choose>
		</set>
		WHERE BA_NUM = #{baNum}
	</update>
	
	<select id="reseltView" resultType="kh.com.job.business.model.dto.BsAplicantDto">
		select * 
		from BUSINESS_APPLICANT
		WHERE BA_NUM = #{baNum}  
	</select>
	
	
		<!--합격자 페이지 리스트 카운트 -->
	<select id="passPageListCount" resultType="_int">
		select count(*)
			from business_applicant_pass bap
			join business_applicant ba ON bap.ba_num = ba.ba_num
			join recruit_regist rr ON rr.ra_num = ba.ra_num
			join user_apply ua ON ba.ba_num = ua.ba_num
		<trim prefix="where" prefixOverrides="AND|OR">
			<if test="searchNum != null and searchNum neq ''">
				ba.RA_NUM like '%'||#{searchNum}||'%'
			</if>
			<if test="searchResult != null and searchResult neq ''">
				AND bap.pass_type like '%'||#{searchResult}||'%'
			</if>
		</trim>
	</select>
	
 	<select id="passPageList" resultType="kh.com.job.business.model.dto.BsPassApplicantDto">
		select  ap_num, user_id, pass_type
				, resume_no, ba_num
				, ra_title
				, (select category_name from ja_category where category_id = pass_type) as pass_name
		FROM(
			SELECT ROWNUM AS NUM , A.*
			FROM (
					select bap.ap_num, bap.user_id, bap.pass_type
					    , ba.resume_no, ba.ba_num
					    , rr.ra_title
					from business_applicant_pass bap
					join business_applicant ba ON bap.ba_num = ba.ba_num
					join recruit_regist rr ON rr.ra_num = ba.ra_num
					join user_apply ua ON ba.ba_num = ua.ba_num
			<trim prefix="where" prefixOverrides="AND|OR">
				<if test="searchNum != null and searchNum neq ''">
					ba.RA_NUM like '%'||#{searchNum}||'%'
				</if>
				<if test="searchResult != null and searchResult neq ''">
					AND bap.pass_type like '%'||#{searchResult}||'%'
				</if>
			</trim>
				ORDER BY ua.apply_date DESC
			) A
			)
		WHERE NUM BETWEEN #{startNum} AND #{endNum}
	</select>
	
	<select id="passCount" resultType="_int">
		select count(*) 
		from BUSINESS_APPLICANT ba 
		join RECRUIT_REGIST rr on ba.ra_num = rr.ra_num
        join business_applicant_pass bap on bap.ba_num = ba.ba_num
		where rr.user_id = #{userId}
        and bap.pass_type ='PT04'
	</select>
	
	<select id="failCount" resultType="_int">
		select count(*) 
		from BUSINESS_APPLICANT ba 
		join RECRUIT_REGIST rr on ba.ra_num = rr.ra_num
        join business_applicant_pass bap on bap.ba_num = ba.ba_num
		where rr.user_id = #{userId}
        and bap.pass_type = 'PT05'
	</select>
	
	<select id="proceedCount" resultType="_int">
		select count(*) 
		from BUSINESS_APPLICANT ba 
		join RECRUIT_REGIST rr on ba.ra_num = rr.ra_num
        join business_applicant_pass bap on bap.ba_num = ba.ba_num
		where rr.user_id = #{userId}
        and bap.pass_type NOT IN ('PT05','PT04')
	</select>
	
	<select id="announceView" resultType="kh.com.job.business.model.dto.BsAnnounceDto">
		select ba.ba_num, ba.ra_num, ba.resume_no, ba.USER_ID
		    , ap_num ,bap.pass_type, bap.result_title, bap.RESULT_CONTENT
		    , ut.user_phone, ut.user_name, ut.user_email, ut.user_birth
		from BUSINESS_APPLICANT ba
		join business_applicant_pass bap on ba.ba_num = bap.ba_num
		join user_table ut on ba.user_id = ut.user_id
		where ba.user_id = #{userId}
		and ba.ba_num = #{baNum}
	</select>
	
	<update id="resultUpdate">
		update business_applicant_pass 
		set pass_type = #{passType}
		    , result_title=#{resultTitle}
		    , result_content=#{resultContent}
		where ap_num = #{apNum}
	</update>
	
</mapper>