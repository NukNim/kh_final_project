<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.7.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	
	<security:http pattern="/resources/**" security="none"></security:http>
	
	<security:http auto-config="true" use-expressions="true">
	<security:csrf disabled="true"/>
<!--         <security:intercept-url pattern="/person/**" access="hasRole('ROLE_P')"/> -->
        <!-- security:intercept-url pattern="/business/**" access="hasRole('ROLE_B')"/-->
        <!-- security:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_A, ROLE_AM')"/-->
        <!-- <security:form-login login-page="/temp/login" /> -->
    </security:http>
    
    <!-- 암호화를 위한 Bean -->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="BCryptPasswordEncoder"></bean>

        <security:jdbc-user-service data-source-ref="dataSource" id="userService"
        	users-by-username-query="SELECT USER_ID AS USERNAME , USER_PW AS PASSWORD , USER_ACT AS ENABLED FROM USER_TABLE WHERE USER_ID =?"
        	authorities-by-username-query="SELECT USER_ID AS USERNAME , USER_ROLE AS AUTHORITY FROM USER_TABLE WHERE USER_ID =?"
        />
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
        </security:authentication-provider>
    </security:authentication-manager>
	
	
	
</beans>